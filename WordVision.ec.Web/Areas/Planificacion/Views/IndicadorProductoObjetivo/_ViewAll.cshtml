@using WordVision.ec.Web.Areas.Planificacion.Models
@model IndicadorProductoObjetivoViewModelMaster


<table id="indicadorPTable" class="table table-striped" width="100%" cellspacing="0">
    <thead>
        <tr>
            <th>Id</th>
            <th>Indicador</th>
           @* <th>Año Fiscal</th>*@
            <th>Meta</th>
            <th>Logro</th>
             @if ((AuthorizationService.AuthorizeAsync(User, Permissions.IndicadorProductoObjetivo.Delete)).Result.Succeeded
                || (AuthorizationService.AuthorizeAsync(User, Permissions.IndicadorProductoObjetivo.View)).Result.Succeeded)
                    {
            <th class="acciones-th">Acciones</th>
            }
        </tr>
    </thead>
    <tbody>
       
            @foreach (var indicador in Model.IndicadorProductoObjetivoViewModel.ToList())
            {
                <tr id="IndicaPO_@indicador.Id">

                    <td>

                        @indicador.Id
                    </td> 
                    <td>

                        @indicador.Indicador
                    </td>
                  @* <td>
                       @{ 

                        var selectedCity = (IEnumerable<SelectListItem>)Model.AnioFiscalList;
                        string txt = selectedCity.Where(x => x.Value == indicador.AnioFiscal.ToString()).FirstOrDefault()?.Text??string.Empty;

                    }
                @txt
                   </td>*@
                     <td>

                        @indicador.Meta
                    </td>
                     <td>

                        @indicador.Logro
                    </td>
                    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.IndicadorProductoObjetivo.Delete)).Result.Succeeded
                || (AuthorizationService.AuthorizeAsync(User, Permissions.IndicadorProductoObjetivo.View)).Result.Succeeded)
                    {
                    <td class="acciones-td">
                        @if ( (AuthorizationService.AuthorizeAsync(User, Permissions.IndicadorProductoObjetivo.View)).Result.Succeeded)
                        {
                         <button type="button" class="btn btn-warning  btn-xp" title="Agregar" id="btnViewModel" onclick="jQueryModalGetHijo('2','/Planificacion/IndicadorProductoObjetivo/OnGetCreateOrEdit?id=@indicador.Id&idProductoObjetivo=@indicador.IdProductoObjetivo&idEstrategia=@Model.IdEstrategia','Indicador de Productos de Objetivo')">
                            <i class="fas fa-pen"></i>
                        </button>
                        }
                        @if ( (AuthorizationService.AuthorizeAsync(User, Permissions.IndicadorProductoObjetivo.Delete)).Result.Succeeded)
                        {
                        <button type="button" onclick="EliminaFilaIndicadorPO(@indicador.Id)" class="btn btn-danger btn-xp"><i class="fas fa-trash-alt"></i> </button>
}
                    </td>
                    }
                </tr>
            }


    </tbody>
</table>

<script>

    $(document).ready(function () {


        var table = $("#indicadorPTable").DataTable({
            aoColumnDefs: [
                { "aTargets": [0], "bSortable": true },
                { "aTargets": [2], "asSorting": ["asc"], "bSortable": true },
            ],
            "language": {
                "url": "/lib/datatables/language/Spanish.json"
            },

            responsive: true,
            columnDefs: [
                { responsivePriority: 1, targets: 0 },
                { responsivePriority: 2, targets: -1 }
            ],
            "info": false
            //columnDefs: [
            //    { responsivePriority: 1, targets: 0 },
            //    { responsivePriority: 10001, targets: 4 },
            //    { responsivePriority: 2, targets: -2 }
            //]
        });


        var column = table.column(0);
        // Toggle the visibility
        column.visible(false);



        //$('#indicadorPTable tbody').on('dblclick', 'tr', function () {
        //    var data = table.row(this).data();


        //    jQueryModalGet('/Planificacion/IndicadorCicloEstrategico/OnGetCreateOrEdit?id=' + data[0] + '&idEstrategia=' + data[1], 'Gestión');

        //});

        $(".dynmic-hidden-col").hide();
    });

    function EliminaFilaIndicadorPO(id) {
      if (confirm('¿Estás segura de eliminar este registro?')) {
      
        var GestionViewModel = {
            id: id
        };

         $.ajax({
            type: "post",
            url:'@Url.Action("OnPostDelete", "IndicadorProductoObjetivo", new { area = "Planificacion" })',
             data: GestionViewModel,
            datatype: "json",
            cache: false,
            success: function (data) {
                 $("#IndicaPO_" + id).remove();
            /*  alert('Validooo');*/

            },
            error: function(xhr) {
               // alert('No Valid Data');
            }
        });

        


      }
    }
</script>
