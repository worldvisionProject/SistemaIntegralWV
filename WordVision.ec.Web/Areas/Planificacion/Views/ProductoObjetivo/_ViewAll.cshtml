@using WordVision.ec.Web.Areas.Planificacion.Models
@model ObjetivoEstrategicoViewModel

@Html.HiddenFor(x => x.Id, new { name = "IdEstrategia", @Value = Model.Id })
    <table id="productoTable" class="table table-striped" width="100%" cellspacing="0">
        <thead>
            <tr>
                <th>Id</th>
                <th>Producto</th>  
                <th>Año Fiscal</th>
                @if ((AuthorizationService.AuthorizeAsync(User, Permissions.IndicadorProductoObjetivo.Create)).Result.Succeeded
                || (AuthorizationService.AuthorizeAsync(User, Permissions.IndicadorProductoObjetivo.View)).Result.Succeeded)
                    {
                <th class="acciones-th">Indicadores</th>
                }
                @if ((AuthorizationService.AuthorizeAsync(User, Permissions.ProductoObjetivo.Create)).Result.Succeeded
                || (AuthorizationService.AuthorizeAsync(User, Permissions.ProductoObjetivo.Delete)).Result.Succeeded)
                    {
                <th class="acciones-th">Acciones</th>
                }
            </tr>
        </thead>
        <tbody>
            @if (Model.ProductoObjetivos != null)
            {

                @foreach (var gestion in Model.ProductoObjetivos.ToList())
                {
            <tr id="PO_@gestion.Id">

                <td>

                    @gestion.Id
                </td>
                <td>

                    @gestion.Producto
                </td>
                  <td>
                       @{ 

                        var selectedCity = (IEnumerable<SelectListItem>)Model.AnioFiscalList;
                        string txt = selectedCity.Where(x => x.Value == gestion.AnioFiscal.ToString()).FirstOrDefault()?.Text??string.Empty;

                    }
                @txt
                   </td>
                   @if ((AuthorizationService.AuthorizeAsync(User, Permissions.IndicadorProductoObjetivo.Create)).Result.Succeeded
                || (AuthorizationService.AuthorizeAsync(User, Permissions.IndicadorProductoObjetivo.View)).Result.Succeeded)
                    {
                    <td class="acciones-td">
                 
                         <button type="button" class="btn btn-success  btn-xp" title="Ver" btn-xp" id="btnViewModel" onclick="jQueryModalGetHijo('1','/Planificacion/IndicadorProductoObjetivo/Index?idProductoObjetivo=@gestion.Id&idEstrategia=@Model.IdEstrategia','Indicador de Producto')">
                        <i class="fas fa-eye"></i>
                    </button>
                     @if ((AuthorizationService.AuthorizeAsync(User, Permissions.IndicadorProductoObjetivo.Create)).Result.Succeeded)
                        {
                        <button type="button" class="btn btn-primary  btn-xp" title="Agregar" id="btnViewModel" onclick="jQueryModalGetHijo('1','/Planificacion/IndicadorProductoObjetivo/OnGetCreateOrEdit?id=0&idProductoObjetivo=@gestion.Id&idEstrategia=@Model.IdEstrategia','Indicador de Producto')">
                            <i class="fas fa-plus-square"></i>
                        </button>
                        }
                </td>
                }
                 @if ((AuthorizationService.AuthorizeAsync(User, Permissions.ProductoObjetivo.Create)).Result.Succeeded
                || (AuthorizationService.AuthorizeAsync(User, Permissions.ProductoObjetivo.Delete)).Result.Succeeded)
                    {
                <td class="acciones-td">
                    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.ProductoObjetivo.Create)).Result.Succeeded)
                    {
                    <button type="button" class="btn btn-warning  btn-xp" title="Agregar" id="btnViewModel" onclick="jQueryModalGetHijo('1','/Planificacion/ProductoObjetivo/OnGetCreateOrEdit?id=@gestion.Id&idEstrategia=@Model.IdEstrategia','Productos de Objetivo')">
                        <i class="fas fa-pen"></i>
                    </button>
                    }
                     @if ((AuthorizationService.AuthorizeAsync(User, Permissions.ProductoObjetivo.Delete)).Result.Succeeded)
                    {
                    <button type="button" onclick="EliminaFilaPO(@gestion.Id)" class="btn btn-danger btn-xp"><i class="fas fa-trash-alt"></i> </button>
                    }
                </td>
                 }
            </tr>
                }}


        </tbody>
    </table>

<script>

    $(document).ready(function () {


        var table = $("#productoTable").DataTable({
            aoColumnDefs: [
                { "aTargets": [0], "bSortable": true },
                { "aTargets": [2], "asSorting": ["asc"], "bSortable": true },
            ],
            "language": {
                "url": "/lib/datatables/language/Spanish.json"
            },

            responsive: true,
            columnDefs: [
                { responsivePriority: 1, targets: 0 },
                { responsivePriority: 2, targets: -1 }
            ],
            "info": false
            //columnDefs: [
            //    { responsivePriority: 1, targets: 0 },
            //    { responsivePriority: 10001, targets: 4 },
            //    { responsivePriority: 2, targets: -2 }
            //]
        });


        var column = table.column(0);
        // Toggle the visibility
        column.visible(false);
       


        $('#gestionTable tbody').on('dblclick', 'tr', function () {
            var data = table.row(this).data();


            jQueryModalGet('/Planificacion/Gestion/OnGetCreateOrEdit?id=' + data[0] + '&idObjetivoEstra=' + data[1], 'Gestión');

        });

        $(".dynmic-hidden-col").hide();
    });

     function EliminaFilaPO(id) {
      if (confirm('¿Estás segura de eliminar este registro?')) {
      
        var GestionViewModel = {
            id: id
        };

         $.ajax({
            type: "post",
            url:'@Url.Action("OnPostDelete", "ProductoObjetivo", new { area = "Planificacion" })',
             data: GestionViewModel,
            datatype: "json",
            cache: false,
            success: function (data) {
                 $("#PO_" + id).remove();
            /*  alert('Validooo');*/

            },
            error: function(xhr) {
               // alert('No Valid Data');
            }
        });

        


      }
    }
</script>
