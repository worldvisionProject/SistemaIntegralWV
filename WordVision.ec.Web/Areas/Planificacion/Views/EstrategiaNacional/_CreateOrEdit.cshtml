@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@using WordVision.ec.Web.Areas.Planificacion.Models
@model EstrategiaNacionalViewModel
@{ ViewData["Title"] = localizer["Ciclo Estratégico"].Value + " " + ViewBag.Ciclo;


    if ((AuthorizationService.AuthorizeAsync(User, Permissions.Gestion.View)).Result.Succeeded)
    {
        ViewData["Caption"] = localizer["Gestionar Ciclo Estratégico aquí"];
    }
    else
    {
        ViewData["TmpGestion"] = localizer["Está en la Gestión:"].Value;
        ViewData["Gestion"] = ViewBag.Gestion;
    }

}
<div class="card card-info">

    <div class="card-header card-header-int">
        Ciclo Estratégico
        @*<div class="pull-right">
                <a class="btn btn-primary" id="btnViewModel" href="/Institucions/Create">
                    <i class="fa fa-plus-square"></i>
                    Agregar
                </a>

            </div>*@
    </div>

    <div class="col-sm-12" style="padding:10px">
        <form id="create-form" method="post" asp-controller="EstrategiaNacional" asp-action="OnPostCreateOrEdit" asp-route-id="@Model.Id" onsubmit="return jQueryModalPost(this);" enctype="multipart/form-data">

            <div class="container" style="padding: 5px 5px 5px 5px">
                <div class="row">
                    <div class="col-md-12 ">
                        <nav>
                            <div class="nav nav-tabs nav-fill" id="nav-tab" role="tablist">
                               @* @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Gestion.View)).Result.Succeeded)
                                {*@
                                    <a class="nav-item nav-link active" id="nav-home-tab" data-toggle="tab" href="#nav-home" role="tabpanel" aria-controls="nav-home" aria-selected="true">Ciclo</a>
                               @* }*@
                                    <a class="nav-item nav-link @(Model.CategoriaObjetivo==2 ? " active" : "")" id="nav-contact-tab" data-toggle="tab" href="#nav-contact" role="tabpanel" aria-controls="nav-contact" aria-selected="true">Objetivo de Bloque</a>
                                    <a class="nav-item nav-link @(Model.CategoriaObjetivo==1 ? " active" : "")" id="nav-profile-tab" data-toggle="tab" href="#nav-profile" role="tabpanel" aria-controls="nav-profile" aria-selected="false">Objetivo Nacional</a>
                                    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Gestion.View)).Result.Succeeded)
                                    {
                                        <a class="nav-item nav-link" id="nav-about-tab" data-toggle="tab" href="#nav-about" role="tabpanel" aria-controls="nav-about" aria-selected="false">Gestión</a>
                                    }
                                </div>
                        </nav>
                        <div class="tab-content py-3 px-3 px-sm-0" id="nav-tabContent">
                            @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Gestion.View)).Result.Succeeded)
                            {
                                <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">
                                    @*CICLO ESTRATEGICO*@
                                    <div class="container-fluid">

                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group row">
                                                    <div class="col-md-12">
                                                        <label class="col-md-12 col-form-label texto-pregunta">Ciclo Estrategico</label>
                                                        @if ((AuthorizationService.AuthorizeAsync(User, Permissions.ObjetivoEstrategico.Create)).Result.Succeeded)
                                                        {
                                                            <input type="text" asp-for="Nombre" name="Nombre" class="form-control">
                                                        }
                                                        else
                                                        {
                                                            <input type="text" asp-for="Nombre" name="Nombre" class="form-control" readonly>
                                                        }
                                                        <span asp-validation-for="Nombre" class="text-danger"></span>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-md-6">
                                                <div class="form-group row">
                                                    0
                                                    <div class="col-md-6">
                                                        <label class="col-md-12 col-form-label texto-pregunta">Estado</label>

                                                        @if ((AuthorizationService.AuthorizeAsync(User, Permissions.ObjetivoEstrategico.Create)).Result.Succeeded)
                                                        {
                                                            @Html.DropDownListFor(x => x.Estado, (IEnumerable<SelectListItem>)ViewBag.EstadoList, new { @class = "form-control" })
                                                        }
                                                        else
                                                        {
                                                            var selectedCity = (IEnumerable<SelectListItem>)ViewBag.EstadoList;
                                                            var txt = selectedCity.Where(x => x.Value == Model.Estado).FirstOrDefault().Text;
                                                            <input type="text" value="@txt" readonly class="form-control" />
                                                        }
                                                        <span asp-validation-for="Estado" class="text-danger"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group row">
                                                    <div class="col-md-12">
                                                        <label class="col-md-12 col-form-label texto-pregunta">Meta Nacional</label>
                                                        @if ((AuthorizationService.AuthorizeAsync(User, Permissions.ObjetivoEstrategico.Create)).Result.Succeeded)
                                                        {

                                                            <textarea asp-for="MetaNacional" name="MetaNacional" class="form-control"></textarea>
                                                        }
                                                        else
                                                        {
                                                            <textarea asp-for="MetaNacional" name="MetaNacional" class="form-control" readonly></textarea>
                                                        }
                                                        <span asp-validation-for="MetaNacional" class="text-danger"></span>
                                                    </div>
                                                </div>
                                            </div>


                                        </div>

                                        @*<div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group row">
                                                    <div class="col-md-12">
                                                        <label class="col-md-12 col-form-label texto-pregunta">Factor Crítico</label>
                                                        @if ((AuthorizationService.AuthorizeAsync(User, Permissions.ObjetivoEstrategico.Create)).Result.Succeeded)
                                                        {

                                                            <textarea asp-for="FactorCritico" name="FactorCritico" class="form-control"></textarea>
                                                        }
                                                        else
                                                        {
                                                            <textarea asp-for="FactorCritico" name="FactorCritico" class="form-control" readonly></textarea>
                                                        }
                                                        <span asp-validation-for="FactorCritico" class="text-danger"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>*@
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group row">
                                                    <div class="col-md-2">
                                                        <button type="button" class="btn btn-primary" id="btnViewModel" onclick="jQueryModalGet('/Planificacion/IndicadorCicloEstrategico/OnGetCreateOrEdit?id=0&idEstrategia=@Model.Id','Crear Gestion')">
                                                            <i class="fa fa-plus-square"></i>
                                                            Agregar
                                                        </button>
                                                        @*<label class="col-md-12 col-form-label texto-pregunta">Indicador</label>
                        @if ((AuthorizationService.AuthorizeAsync(User, Permissions.ObjetivoEstrategico.Create)).Result.Succeeded)
                        {
                            <textarea asp-for="Indicador" name="Indicador" class="form-control"></textarea>
                        }
                        else
                        { <textarea asp-for="Indicador" name="Indicador" class="form-control" readonly></textarea>}

                        <span asp-validation-for="Indicador" class="text-danger"></span>*@
                                                    </div>
                                                </div>


                                            </div>
                                        </div> 
                                        <div id="viewAllIndicador" class="card-body table-responsive" style="padding: 0;">
                                        </div>
 
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group row">
                                                    @{
                                                        decimal valor = 0;
                                                        decimal logro = 0;
                                                        int i = 0;
                                                    }
                                                    @if (Model.IndicadorCicloEstrategicos != null)
                                                    {

                                                        @foreach (var gestion in Model.IndicadorCicloEstrategicos.ToList())
                                                        {
                                                           @* <div class="col-md-2">
                                                                <label class="col-md-12 col-form-label texto-pregunta">@gestion.Anio</label>
                                                                <input name="gestiones[@i].Meta" type="text" value="@gestion.Meta" class="form-control" />
                                                                <label class="col-md-12 col-form-label texto-pregunta">Logro: @gestion.Anio</label>
                                                                <input name="gestiones[@i].Logro" type="text" value="@gestion.Logro" class="form-control" />


                                                                <input name="gestiones[@i].Id" id="@gestion.Id" value="@gestion.Id" type="hidden" />

                                                            </div>*@
                                                            valor = valor + Convert.ToDecimal(gestion.Meta);
                                                            logro = logro + Convert.ToDecimal(gestion.Logro);
                                                            i = i + 1;
                                                        }
                                                    }

                                                   @* <div class="col-md-6">
                                                        <label class="col-md-12 col-form-label texto-pregunta">Meta Acumulada</label>
                                                        <input id="af1" type="text" value="@valor" readonly class="form-control" />
                                                       
                                                    </div>
                                                     <div class="col-md-6">
                                                       
                                                        <label class="col-md-12 col-form-label texto-pregunta">Logro Acumulada</label>
                                                        <input id="af11" type="text" value="@logro" readonly class="form-control" />
                                                    </div>*@
                                                </div>

                                            </div>

                                        </div>
                                        @if ((AuthorizationService.AuthorizeAsync(User, Permissions.EstrategiaNacional.Create)).Result.Succeeded)
                                        {
                                            <br />
                                            <div class="form-group justify-content-between" style="margin-bottom: 0px !important">
                                                <button type="submit" class="btn btn-success">Guardar</button>
                                                @*<button type="submit" class="btn btn-default close-button" data-dismiss="modal">Cancelar</button>*@
                                            </div>
                                        }

                                    </div>

                                </div>

                            }

                                <div class="tab-pane fade @(Model.CategoriaObjetivo==2 ? " show active" : "")" id="nav-contact" role="tabpanel" aria-labelledby="nav-contact-tab">
                                    @*OBJETIVO BLOQUE*@
                                    <div class="container-fluid">
                                        @if ((AuthorizationService.AuthorizeAsync(User, Permissions.ObjetivoEstrategico.Create)).Result.Succeeded)
                                        {
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="form-group row">
                                                        <div class="col-md-2">
                                                            <button type="button" class="btn btn-primary" id="btnViewModel" onclick="jQueryModalGet('/Planificacion/ObjetivoEstrategico/OnGetCreateOrEdit?id=0&idEstrategia=@Model.Id&categoria=2','Crear Objetivos Resultados')">
                                                                <i class="fa fa-plus-square"></i>
                                                                Agregar
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                        }
                                        @Html.HiddenFor(x => x.Id, new { name = "IdEstrategia", @Value = Model.Id })
                                        @*<div id="divObjetivo">*@
                                        <div id="viewAll" class="card-body table-responsive" style="padding: 0;">
                                        </div>
                                        @*</div>*@
                                    </div>
                                </div>




                                <div class="tab-pane fade @(Model.CategoriaObjetivo==1 ? " show active" : "")" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab">
                                    @*OBJETIVO NACIONAL*@

                                    <div class="container-fluid">
                                        @if ((AuthorizationService.AuthorizeAsync(User, Permissions.ObjetivoEstrategico.Create)).Result.Succeeded)
                                        {
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="form-group row">
                                                        <div class="col-md-2">
                                                            <button type="button" class="btn btn-primary" id="btnViewModel" onclick="jQueryModalGet('/Planificacion/ObjetivoEstrategico/OnGetCreateOrEdit?id=0&idEstrategia=@Model.Id&categoria=1','Crear Objetivos Resultados')">
                                                                <i class="fa fa-plus-square"></i>
                                                                Agregar
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        @Html.HiddenFor(x => x.Id, new { name = "IdEstrategia", @Value = Model.Id })
                                        @*<div id="divObjetivo">*@

                                        <div id="viewAllNacional" class="card-body table-responsive" style="padding: 0;">
                                        </div>
                                        @*</div>*@
                                    </div>
                                </div>

                                <div class="tab-pane fade" id="nav-about" role="tabpanel" aria-labelledby="nav-about-tab">
                                    @*GESTION*@
                                    <div class="container-fluid">
                                        @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Gestion.Create)).Result.Succeeded)
                                        {
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="form-group row">
                                                        <div class="col-md-2">
                                                            <button type="button" class="btn btn-primary" id="btnViewModel" onclick="jQueryModalGet('/Planificacion/Gestion/OnGetCreateOrEdit?id=0&idEstrategia=@Model.Id','Crear Gestion')">
                                                                <i class="fa fa-plus-square"></i>
                                                                Agregar
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        <div id="viewAllGestion" class="card-body table-responsive" style="padding: 0;">
                                        </div>

                                    </div>
                                </div>
                            </div>

                    </div>
                </div>
            </div>

            
        </form>

    </div>
</div>

<script type="text/javascript" language=javascript>

    $(document).ready(function () {
        loadData();
    });
        function loadData() {
            $('#viewAll').load('/Planificacion/ObjetivoEstrategico/LoadObjetivo?idEstrategia=@Model.Id&idCategoria=2&AnioGestion=@Model.AnioGestion&esCoordinadorEstrategico=@Model.EsCoordinadorEstrategico');
            $('#viewAllNacional').load('/Planificacion/ObjetivoEstrategico/LoadObjetivo?idEstrategia=@Model.Id&idCategoria=1&AnioGestion=@Model.AnioGestion&esCoordinadorEstrategico=@Model.EsCoordinadorEstrategico');
            $('#viewAllGestion').load('/Planificacion/Gestion/LoadGestiones?idEstrategico=@Model.Id');
            $('#viewAllIndicador').load('/Planificacion/IndicadorCicloEstrategico/LoadIndicadores?idEstrategia=@Model.Id&ciclo=@Model.Nombre');
        }


 $(document).ready(function () {
        var table = $("#nacionalesTable").DataTable({
            aoColumnDefs: [
                { "aTargets": [0], "bSortable": true },
                { "aTargets": [2], "asSorting": ["asc"], "bSortable": true },
            ],
            "language": {
                "url": "../lib/datatables/language/Spanish.json"
            },

            responsive: true,
            columnDefs: [
                { responsivePriority: 1, targets: 0 },
                { responsivePriority: 2, targets: -1 }
            ],
            "info": false
            //columnDefs: [
            //    { responsivePriority: 1, targets: 0 },
            //    { responsivePriority: 10001, targets: 4 },
            //    { responsivePriority: 2, targets: -2 }
            //]
        });



    });

    //$.validator.unobtrusive.parse(document);
    //$(function () {
    //    $(".datepicker").datepicker({ dateFormat: 'dd-mm-yy' });
    //    //$("#VigDesde").datepicker({ dateFormat: 'dd-mm-yy' });
    //    //$("#VigHasta").datepicker({ dateFormat: 'dd-mm-yy' });

    //});

    //$("#BrandId").select2({
    //    placeholder: "Select a Category",
    //    theme: "bootstrap4",
    //    escapeMarkup: function (m) {
    //        return m;
    //    }
    //});


    var num = 0;
    function AddRow(Id) {

        let Anio = document.getElementById("AnioGestion").value;
        let Descripcion = document.getElementById("DescGestion").value;
        let Estado = document.getElementById("EstadoGestion").value;
        let IdEstrategia = document.getElementById("Id").value;
        var t = document.getElementById("EstadoGestion");
        var DescEstado = t.options[t.selectedIndex].text;

        if (Descripcion.length == 0) {
            alert("Ingrese la Gestion.");
            return;
        }


        //agregamos tabla
        let Tabla = document.getElementById("gestionTable");
        let TR = document.createElement("tr");
        TR.setAttribute('id', "Gest_"+Id);
        // let TDId = document.createElement("td");
        let TDAnio = document.createElement("td");
        let TDDescripcion = document.createElement("td");
        let TDEstado = document.createElement("td");
        let TDEliminar = document.createElement("td");
        TDEliminar.className = "text-right";
        //let TDTotal = document.createElement("td");
        // TR.appendChild(TDId);
        TR.appendChild(TDAnio);
        TR.appendChild(TDDescripcion);
        TR.appendChild(TDEstado);
        TR.appendChild(TDEliminar);
        //TR.appendChild(TDTotal);
        // TDId.innerHTML = num;
        TDAnio.innerHTML = Anio;
        TDDescripcion.innerHTML = Descripcion;
        TDEstado.innerHTML = DescEstado;
        TDEliminar.innerHTML = " <button type='button' onclick='EliminaFila(" + Id + ")' class='btn btn-danger btn-xp'><i class='fas fa-trash-alt'></i> </button>";
        //TDTotal.innerHTML = parseFloat(Cantidad) * parseFloat(Precio);
        Tabla.appendChild(TR);

        //agregamos hiddens
        let DivConceptos = document.getElementById("divGestion");
        let HiddenIndex = document.createElement("input");
        let HiddenAnio = document.createElement("input");
        let HiddenDescripcion = document.createElement("input");
        let HiddenEstado = document.createElement("input");
        HiddenIndex.name = "gestion.Index";
        HiddenIndex.value = num;
        HiddenIndex.type = "hidden";
        HiddenAnio.name = "gestion[" + num + "].Anio";
        HiddenAnio.value = Anio;
        HiddenAnio.type = "hidden";
        HiddenDescripcion.name = "gestion[" + num + "].Descripcion";
        HiddenDescripcion.value = Descripcion;
        HiddenDescripcion.type = "hidden";
        HiddenEstado.name = "gestion[" + num + "].Estado";
        HiddenEstado.value = Estado;
        HiddenEstado.type = "hidden";
        DivConceptos.appendChild(HiddenIndex);
        DivConceptos.appendChild(HiddenAnio);
        DivConceptos.appendChild(HiddenDescripcion);
        DivConceptos.appendChild(HiddenEstado);

        document.getElementById("AnioGestion").value = "";
        document.getElementById("DescGestion").value = "";
        document.getElementById("EstadoGestion").value = "";

        num++;


    }

    function AgregaAF() {

        let Anio = document.getElementById("AnioGestion").value;
        let Descripcion = document.getElementById("DescGestion").value;
        let Estado = document.getElementById("EstadoGestion").value;
        let IdEstrategia = document.getElementById("Id").value;

            var GestionViewModel = {
                Id:0,
                Descripcion: Descripcion,
                Anio: Anio,
                Estado: Estado,
                IdEstrategia: IdEstrategia

            };

        $.ajax({
            type: "post",
            url:'@Url.Action("OnPostCreateOrEdit", "Gestion", new { area = "Planificacion" })',
            data: GestionViewModel,
            datatype: "json",
            cache: false,
            success: function (res) {
                if (res.isValid) {
                    alert(res.id);
                    AddRow(res.id);
                }

            },
            error: function(xhr) {
               alert('No Valid Data');
            }
        });

        }

    function deleteRow(id) {
        $("#Gest_" + id).remove();
    }

    function EliminaFila(id) {
       if (confirm('¿Estás segura de eliminar este registro?')) {
       

        var GestionViewModel = {
            id: id
        };

         $.ajax({
            type: "post",
            url:'@Url.Action("OnPostDelete", "Gestion", new { area = "Planificacion" })',
             data: GestionViewModel,
            datatype: "json",
            cache: false,
            success: function (data) {
            /*  alert('Validooo');*/
            $("#Gest_" + id).remove();
            },
            error: function(xhr) {
               // alert('No Valid Data');
            }
        });
         
        }
    }

</script>
