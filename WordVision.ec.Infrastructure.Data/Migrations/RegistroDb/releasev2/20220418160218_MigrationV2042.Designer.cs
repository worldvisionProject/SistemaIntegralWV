// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WordVision.ec.Infrastructure.Data.Contexts;

namespace WordVision.ec.Infrastructure.Data.Migrations.RegistroDb.releasev2
{
    [DbContext(typeof(RegistroDbContext))]
    [Migration("20220418160218_MigrationV2042")]
    partial class MigrationV2042
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AspNetCoreHero.EntityFrameworkCore.AuditTrail.Models.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Catalogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("IdRol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Catalogos", "adm");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Ciudad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("IdProvincia");

                    b.ToTable("Ciudades", "adm");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.DetalleCatalogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdCatalogo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Secuencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCatalogo");

                    b.ToTable("DetalleCatalogos", "adm");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaginaWeb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pais")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Empresas", "adm");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Estructura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.Property<int>("ReportaID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("Estructuras", "adm");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Paises", "adm");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdPais")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Region")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPais");

                    b.ToTable("Provincias", "adm");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.Actividad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescripcionActividad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entregable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCargoResponsable")
                        .HasColumnType("int");

                    b.Property<int>("IdIndicadorPOA")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Ponderacion")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SNPresupuesto")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<decimal?>("Saldo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TechoPresupuestoCC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalRecurso")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdIndicadorPOA");

                    b.ToTable("Actividades", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.EstrategiaNacional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("FactorCritico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<string>("Indicador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MetaNacional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaRegional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("EstrategiaNacionales", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.FactorCriticoExito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FactorCritico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdObjetivoEstra")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdObjetivoEstra");

                    b.ToTable("FactorCriticoExitos", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.FechaCantidadRecurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdRecurso")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<decimal?>("Valor")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdRecurso");

                    b.ToTable("FechaCantidadRecursos", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.Gestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Anio")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Estado")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime?>("FechaDesde")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaHasta")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEstrategia")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Logro")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Meta")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdEstrategia");

                    b.ToTable("Gestiones", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorAF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Anio")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Entregable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdIndicadorEstrategico")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("LineaBase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Meta")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdIndicadorEstrategico");

                    b.ToTable("IndicadorAFs", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorCicloEstrategico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActorParticipante")
                        .HasColumnType("int");

                    b.Property<int>("AnioFiscal")
                        .HasColumnType("int");

                    b.Property<int>("AnioFiscal2")
                        .HasColumnType("int");

                    b.Property<int>("AnioFiscal3")
                        .HasColumnType("int");

                    b.Property<int>("AnioFiscal4")
                        .HasColumnType("int");

                    b.Property<int>("CodigoIndicador")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEstrategia")
                        .HasColumnType("int");

                    b.Property<string>("IndicadorCiclo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("LineBase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LineBase2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LineBase3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LineBase4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Logro")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Logro2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Logro3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Logro4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Meta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Meta2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Meta3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Meta4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MetaAcumulada")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoIndicador")
                        .HasColumnType("int");

                    b.Property<int>("TipoMeta")
                        .HasColumnType("int");

                    b.Property<int>("UnidadMedida")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEstrategia");

                    b.ToTable("IndicadorCicloEstrategico", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorEstrategico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Actor")
                        .HasColumnType("int");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntregableAnual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdFactorCritico")
                        .HasColumnType("int");

                    b.Property<string>("IndicadorResultado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("LineaBase")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MedioVerificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Meta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Responsable")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Seleccionado")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<int>("TipoMeta")
                        .HasColumnType("int");

                    b.Property<int?>("UnidadMedida")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdFactorCritico");

                    b.ToTable("IndicadorEstrategicos", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorPOA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Actor")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("IndicadorProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("LineaBase")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MedioVerificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Meta")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Responsable")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<int>("TipoMeta")
                        .HasColumnType("int");

                    b.Property<int?>("UnidadMedida")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdProducto");

                    b.ToTable("IndicadorPOAs", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorProductoObjetivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActorParticipante")
                        .HasColumnType("int");

                    b.Property<int>("CodigoIndicador")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEstrategia")
                        .HasColumnType("int");

                    b.Property<int>("IdProductoObjetivo")
                        .HasColumnType("int");

                    b.Property<string>("Indicador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Logro")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Meta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoIndicador")
                        .HasColumnType("int");

                    b.Property<int>("UnidadMedida")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdProductoObjetivo");

                    b.ToTable("IndicadorProductoObjetivos", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorVinculadoCE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActorParticipante")
                        .HasColumnType("int");

                    b.Property<int>("CodigoIndicador")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdIndicadorCicloEstrategico")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoIndicador")
                        .HasColumnType("int");

                    b.Property<int>("UnidadMedida")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdIndicadorCicloEstrategico");

                    b.ToTable("IndicadorVinculadoCEs", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorVinculadoE", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActorParticipante")
                        .HasColumnType("int");

                    b.Property<int>("CodigoIndicador")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdIndicadorEstrategico")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoIndicador")
                        .HasColumnType("int");

                    b.Property<int>("UnidadMedida")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdIndicadorEstrategico");

                    b.ToTable("IndicadorVinculadoEs", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorVinculadoPO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActorParticipante")
                        .HasColumnType("int");

                    b.Property<int>("CodigoIndicador")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdIndicadorProductoObjetivo")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoIndicador")
                        .HasColumnType("int");

                    b.Property<int>("UnidadMedida")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdIndicadorProductoObjetivo");

                    b.ToTable("IndicadorVinculadoPOs", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorVinculadoPOA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActorParticipante")
                        .HasColumnType("int");

                    b.Property<int>("CodigoIndicador")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdIndicadorPOA")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoIndicador")
                        .HasColumnType("int");

                    b.Property<int>("UnidadMedida")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdIndicadorPOA");

                    b.ToTable("IndicadorVinculadoPOAs", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.MetaEstrategica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Abril")
                        .HasColumnType("bit");

                    b.Property<bool?>("Agosto")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Diciembre")
                        .HasColumnType("bit");

                    b.Property<bool?>("Enero")
                        .HasColumnType("bit");

                    b.Property<string>("Entregable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Febrero")
                        .HasColumnType("bit");

                    b.Property<int>("IdGestion")
                        .HasColumnType("int");

                    b.Property<int>("IdIndicadorEstrategico")
                        .HasColumnType("int");

                    b.Property<bool?>("Julio")
                        .HasColumnType("bit");

                    b.Property<bool?>("Junio")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Marzo")
                        .HasColumnType("bit");

                    b.Property<bool?>("Mayo")
                        .HasColumnType("bit");

                    b.Property<bool?>("Noviembre")
                        .HasColumnType("bit");

                    b.Property<int>("NumMeses")
                        .HasColumnType("int");

                    b.Property<bool?>("Octubre")
                        .HasColumnType("bit");

                    b.Property<bool?>("Septiembre")
                        .HasColumnType("bit");

                    b.Property<int>("TipoMedida")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdIndicadorEstrategico");

                    b.ToTable("MetaEstrategicas", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.MetaTactica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Abril")
                        .HasColumnType("bit");

                    b.Property<bool?>("Agosto")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Diciembre")
                        .HasColumnType("bit");

                    b.Property<bool?>("Enero")
                        .HasColumnType("bit");

                    b.Property<string>("Entregable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Febrero")
                        .HasColumnType("bit");

                    b.Property<int>("IdIndicadorPOA")
                        .HasColumnType("int");

                    b.Property<bool?>("Julio")
                        .HasColumnType("bit");

                    b.Property<bool?>("Junio")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LineaBase")
                        .HasColumnType("int");

                    b.Property<bool?>("Marzo")
                        .HasColumnType("bit");

                    b.Property<bool?>("Mayo")
                        .HasColumnType("bit");

                    b.Property<bool?>("Noviembre")
                        .HasColumnType("bit");

                    b.Property<int>("NumMeses")
                        .HasColumnType("int");

                    b.Property<bool?>("Octubre")
                        .HasColumnType("bit");

                    b.Property<bool?>("Septiembre")
                        .HasColumnType("bit");

                    b.Property<int>("TipoMedida")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdIndicadorPOA");

                    b.ToTable("MetaTacticas", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.ObjetivoEstrategico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AreaPrioridad")
                        .HasColumnType("int");

                    b.Property<int>("CargoResponsable")
                        .HasColumnType("int");

                    b.Property<int>("Categoria")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cwbo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Dimension")
                        .HasColumnType("int");

                    b.Property<int>("IdEstrategia")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Programa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdEstrategia");

                    b.ToTable("ObjetivoEstrategicos", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCargoResponsable")
                        .HasColumnType("int");

                    b.Property<int>("IdGestion")
                        .HasColumnType("int");

                    b.Property<int>("IdIndicadorEstrategico")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdIndicadorEstrategico");

                    b.ToTable("Productos", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.ProductoObjetivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnioFiscal")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdObjetivoEstra")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Producto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdObjetivoEstra");

                    b.ToTable("ProductoObjetivos", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.Recurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cantidad")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CategoriaMercaderia")
                        .HasColumnType("int");

                    b.Property<int>("CentroCosto")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CuentaCodigoCC")
                        .HasColumnType("int");

                    b.Property<string>("DetalleInsumo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gtrm")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("IdActividad")
                        .HasColumnType("int");

                    b.Property<int>("Insumo")
                        .HasColumnType("int");

                    b.Property<string>("JustificacionConsultoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParaqueConsultoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PrecioUnitario")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Total")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdActividad");

                    b.ToTable("Recursos", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.Seguimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvanceCompetencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdIndicador")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<string>("NombreAdjunto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PorcentajeAvance")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RutaAdjunto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.ToTable("Seguimientos", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.TechoPresupuestario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoCC")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescripcionCC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Techo")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("TechoPresupuestarios", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.TiposIndicador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoIndicador")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CodigoTipoIndicador")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TiposIndicadores", "planifica");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Presupuesto.DatosLDR", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnioIngreso")
                        .HasColumnType("int");

                    b.Property<string>("Area")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<string>("Cargo")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FijoEventual")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Ldr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MesIngreso")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<decimal>("PorceImputado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("T0")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("T1")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("T2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("T3")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("T4")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("T5")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("T6")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("T7")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("T8")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("T9")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("TotalGasto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("ValorImputado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("DatosLDRs", "pres");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Presupuesto.DatosT5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cuentasop")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("DescripcionT2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("T2")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DatosT5s", "pres");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Presupuesto.Presupuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnioIngreso")
                        .HasColumnType("int");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescripcionT5")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<int>("MesIngreso")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("T5")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoCargo")
                        .HasColumnType("int");

                    b.Property<int>("TodoAnio")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Presupuestos", "pres");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Colaborador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApellidoMaterno")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("Area")
                        .HasColumnType("int");

                    b.Property<int?>("Cargo")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdEstructura")
                        .HasColumnType("int");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LugarTrabajo")
                        .HasColumnType("int");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SegundoNombre")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("IdEstructura");

                    b.ToTable("Colaboradores");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Documento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionAcepto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.HasKey("Id");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Firma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdColaborador")
                        .HasColumnType("int");

                    b.Property<int>("IdDocumento")
                        .HasColumnType("int");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdColaborador");

                    b.ToTable("Firmas");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Formulario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alergias")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("CalleResidencia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CalleSecundariaResidencia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CedulaExtranjero")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Celular")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CiudadResidencia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CiudadaniaExtranjero")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CodigoArea")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreenciaReligiosa")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CuentaBancaria")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("DiscapacidadSN")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("DobleCiudadaniaSN")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("EstadoCivil")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Etnia")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("FamiliaDiscapacidad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FamiliaDiscapacidadRelacion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FamiliaDiscapacidadSN")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("FamiliaPorcentajeDiscapacidad")
                        .HasColumnType("int");

                    b.Property<string>("FamiliaTipoDiscapacidad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("FormacionAcademica")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdColaborador")
                        .HasColumnType("int");

                    b.Property<string>("Idioma")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Iglesia")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ImageCedula")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ImageCovid")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ImageDiscapacidad")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ImageDiscapacidadFamiliar")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ImagePapeleta")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("InfoResidencia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nacionalidad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumCasaResidencia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaisCiudadania")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaisResidencia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Pdf")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("PorcentajeDiscapacidad")
                        .HasColumnType("int");

                    b.Property<int>("PorcentajeEscrito")
                        .HasColumnType("int");

                    b.Property<int>("PorcentajeHablado")
                        .HasColumnType("int");

                    b.Property<string>("Preexistencia")
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("ProvinciaResidencia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReferenciaResidencia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SectorResidencia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoDiscapacidad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoSangre")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime?>("VigenciaDesde")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VigenciaHasta")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdColaborador");

                    b.ToTable("Formularios");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.FormularioTercero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdFormulario")
                        .HasColumnType("int");

                    b.Property<int?>("IdTecero")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("IdFormulario");

                    b.HasIndex("IdTecero");

                    b.ToTable("FormularioTercero");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Idioma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Escrito")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Hablado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdFormulario")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdFormulario");

                    b.ToTable("Idiomas");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Pregunta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionAcepto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionUrl1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionUrl2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionUrl3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("IdDocumento")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumPregunta")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("Url1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdDocumento");

                    b.ToTable("Preguntas");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Respuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescRespuesta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdColaborador")
                        .HasColumnType("int");

                    b.Property<int>("IdDocumento")
                        .HasColumnType("int");

                    b.Property<int>("IdPregunta")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdColaborador");

                    b.ToTable("Respuestas");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Tercero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Celular")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CodigoArea")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("FecNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Identificacion")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<byte[]>("ImageCedula")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SegundoApellido")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SegundoNombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime?>("VigDesde")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VigHasta")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Tercero");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Soporte.Comunicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("AutorizaciondelLider")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("DisponibilidadPresupuestaria")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("DocumentoBase")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("FechaEvento")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("GuionEvento")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("HoraEvento")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("IdSolicitud")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LugarEvento")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MensajeClave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreEvento")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("NumeroParticipantes")
                        .HasColumnType("int");

                    b.Property<string>("ObjetivoEvento")
                        .IsRequired()
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)");

                    b.Property<string>("PersonalWV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonasAsistiran")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Presupuesto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PublicoObjetivo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SituacionesInteresWV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SociosInteractuar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoSolicitud")
                        .HasColumnType("int");

                    b.Property<bool>("TransmisionVirtual")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Comunicaciones", "soporte");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Soporte.Donante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellido2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Banco")
                        .HasColumnType("int");

                    b.Property<int?>("BancoBp")
                        .HasColumnType("int");

                    b.Property<int>("Campana")
                        .HasColumnType("int");

                    b.Property<int>("Canal")
                        .HasColumnType("int");

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<int>("Cedula")
                        .HasColumnType("int");

                    b.Property<int>("Ciudad")
                        .HasColumnType("int");

                    b.Property<string>("ComentarioActualizacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComentarioResolucion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoDonante")
                        .HasColumnType("int");

                    b.Property<byte[]>("EvidenciaConversion")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("FechaCaducidad")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCaducidadBp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaConversion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormaPago")
                        .HasColumnType("int");

                    b.Property<int>("FrecuenciaDonacion")
                        .HasColumnType("int");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MesInicialDebito")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumReferencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumReferenciaBp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCuenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCuentaBp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroTarjeta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroTarjetaBp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Provincia")
                        .HasColumnType("int");

                    b.Property<string>("RUC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Region")
                        .HasColumnType("int");

                    b.Property<int>("Responsable")
                        .HasColumnType("int");

                    b.Property<string>("TelefonoCelular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoConvencional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("TipoCuenta")
                        .HasColumnType("int");

                    b.Property<int?>("TipoCuentaBp")
                        .HasColumnType("int");

                    b.Property<int?>("TiposTarjetasCredito")
                        .HasColumnType("int");

                    b.Property<int?>("TiposTarjetasCreditoBp")
                        .HasColumnType("int");

                    b.Property<bool>("WhatsApp")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Donantes", "soporte");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Soporte.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEnvioEmail")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdSolicitud")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PersonaEnvioEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emails", "soporte");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Soporte.EstadosSolicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdSolicitud")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdSolicitud");

                    b.ToTable("EstadosSolicitudes", "soporte");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Soporte.LogoSocio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdComunicacion")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Logo")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Socio")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("IdComunicacion");

                    b.ToTable("LogoSocios", "soporte");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Soporte.Mensajeria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Archivo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Celular")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescripcionTramite")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("FechaRequerida")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdSolicitud")
                        .HasColumnType("int");

                    b.Property<string>("InformacionAdicional")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PersonaaContactar")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("TiposTramites")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Mensajerias", "soporte");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Soporte.Personal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArea")
                        .HasColumnType("int");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<int>("IdPersonal")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Personales", "soporte");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Soporte.Ponente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdComunicacion")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Perfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tema")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdComunicacion");

                    b.ToTable("Ponentes", "soporte");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Soporte.Solicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AsignadoA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComentarioSatisfaccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescripcionSolucion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("EstadoSatisfaccion")
                        .HasColumnType("int");

                    b.Property<int>("IdAsignadoA")
                        .HasColumnType("int");

                    b.Property<int>("IdColaborador")
                        .HasColumnType("int");

                    b.Property<int?>("IdSolicitud")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ObservacionesSolucion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoSistema")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdColaborador");

                    b.HasIndex("IdSolicitud")
                        .IsUnique()
                        .HasFilter("[IdSolicitud] IS NOT NULL");

                    b.ToTable("Solicitudes", "soporte");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Valoracion.AvanceObjetivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComentarioLider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCumplimiento")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPlanificacion")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Porcentaje")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdPlanificacion");

                    b.ToTable("AvanceObjetivos", "valoracion");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Valoracion.Competencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comportamiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EsObligatorio")
                        .HasColumnType("int");

                    b.Property<int>("IdCompetencia")
                        .HasColumnType("int");

                    b.Property<int>("IdNivel")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreCompetencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Padre")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Competencias", "valoracion");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Valoracion.Objetivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Objetivos", "valoracion");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Valoracion.ObjetivoAnioFiscal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnioFiscal")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdObjetivo")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Maximo")
                        .HasColumnType("int");

                    b.Property<int>("Minimo")
                        .HasColumnType("int");

                    b.Property<decimal>("Ponderacion")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdObjetivo");

                    b.ToTable("ObjetivoAnioFiscales", "valoracion");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Valoracion.PlanificacionComportamiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCompetencia")
                        .HasColumnType("int");

                    b.Property<int>("IdPlanificacion")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdPlanificacion");

                    b.ToTable("PlanificacionComportamientos", "valoracion");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Valoracion.PlanificacionHito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPlanificacion")
                        .HasColumnType("int");

                    b.Property<string>("Indicador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Meta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPlanificacion");

                    b.ToTable("PlanificacionHitos", "valoracion");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Valoracion.PlanificacionResultado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DatoManual1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatoManual2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DatoManual3")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCumplimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdColaborador")
                        .HasColumnType("int");

                    b.Property<int>("IdObjetivoAnioFiscal")
                        .HasColumnType("int");

                    b.Property<int>("IdResultado")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Meta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ObservacionLider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Ponderacion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PonderacionResultado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PorcentajeCumplimiento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReportaId")
                        .HasColumnType("int");

                    b.Property<int>("TipoObjetivo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdObjetivoAnioFiscal");

                    b.ToTable("PlanificacionResultados", "valoracion");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Valoracion.Responsabilidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EsObligatorio")
                        .HasColumnType("int");

                    b.Property<int>("IdEstructura")
                        .HasColumnType("int");

                    b.Property<int>("IdObjetivoAnioFiscal")
                        .HasColumnType("int");

                    b.Property<int>("IdResponsabilidad")
                        .HasColumnType("int");

                    b.Property<string>("Indicador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Padre")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdObjetivoAnioFiscal");

                    b.ToTable("Responsabilidades", "valoracion");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Valoracion.Resultado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EsObligatorio")
                        .HasColumnType("int");

                    b.Property<int>("IdObjetivoAnioFiscal")
                        .HasColumnType("int");

                    b.Property<string>("Indicador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdObjetivoAnioFiscal");

                    b.ToTable("Resultados", "valoracion");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Valoracion.SeguimientoObjetivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnioFiscal")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdColaborador")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ultimo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SeguimientoObjetivos", "valoracion");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Ciudad", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Maestro.Provincia", "Provincias")
                        .WithMany("Ciudades")
                        .HasForeignKey("IdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincias");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.DetalleCatalogo", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Maestro.Catalogo", "Catalogos")
                        .WithMany("DetalleCatalogos")
                        .HasForeignKey("IdCatalogo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalogos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Estructura", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Maestro.Empresa", "Empresas")
                        .WithMany("Estructuras")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Provincia", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Maestro.Pais", "Paises")
                        .WithMany("Provincias")
                        .HasForeignKey("IdPais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paises");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.Actividad", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.IndicadorPOA", "IndicadorPOAs")
                        .WithMany("Actividades")
                        .HasForeignKey("IdIndicadorPOA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IndicadorPOAs");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.FactorCriticoExito", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.ObjetivoEstrategico", "ObjetivoEstrategicos")
                        .WithMany("FactorCriticoExitos")
                        .HasForeignKey("IdObjetivoEstra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ObjetivoEstrategicos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.FechaCantidadRecurso", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.Recurso", "Recursos")
                        .WithMany("FechaCantidadRecursos")
                        .HasForeignKey("IdRecurso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recursos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.Gestion", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.EstrategiaNacional", "EstrategiaNacionales")
                        .WithMany("Gestiones")
                        .HasForeignKey("IdEstrategia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstrategiaNacionales");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorAF", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.IndicadorEstrategico", "IndicadorEstrategicos")
                        .WithMany("IndicadorAFs")
                        .HasForeignKey("IdIndicadorEstrategico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IndicadorEstrategicos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorCicloEstrategico", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.EstrategiaNacional", "EstrategiaNacionales")
                        .WithMany("IndicadorCicloEstrategicos")
                        .HasForeignKey("IdEstrategia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstrategiaNacionales");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorEstrategico", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.FactorCriticoExito", "FactorCriticoExitos")
                        .WithMany("IndicadorEstrategicos")
                        .HasForeignKey("IdFactorCritico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FactorCriticoExitos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorPOA", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.Producto", "Productos")
                        .WithMany("IndicadorPOAs")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorProductoObjetivo", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.ProductoObjetivo", "ProductoObjetivos")
                        .WithMany("IndicadorProductoObjetivos")
                        .HasForeignKey("IdProductoObjetivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductoObjetivos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorVinculadoCE", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.IndicadorCicloEstrategico", "IndicadorCicloEstrategicos")
                        .WithMany("IndicadorVinculadoCEs")
                        .HasForeignKey("IdIndicadorCicloEstrategico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IndicadorCicloEstrategicos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorVinculadoE", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.IndicadorEstrategico", "IndicadorEstrategicos")
                        .WithMany("IndicadorVinculadoEs")
                        .HasForeignKey("IdIndicadorEstrategico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IndicadorEstrategicos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorVinculadoPO", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.IndicadorProductoObjetivo", "IndicadorProductoObjetivos")
                        .WithMany("IndicadorVinculadoPOs")
                        .HasForeignKey("IdIndicadorProductoObjetivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IndicadorProductoObjetivos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorVinculadoPOA", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.IndicadorPOA", "IndicadorPOAs")
                        .WithMany("IndicadorVinculadoPOAs")
                        .HasForeignKey("IdIndicadorPOA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IndicadorPOAs");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.MetaEstrategica", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.IndicadorEstrategico", "IndicadorEstrategicos")
                        .WithMany("MetaEstrategicas")
                        .HasForeignKey("IdIndicadorEstrategico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IndicadorEstrategicos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.MetaTactica", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.IndicadorPOA", "IndicadorPOAs")
                        .WithMany("MetaTacticas")
                        .HasForeignKey("IdIndicadorPOA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IndicadorPOAs");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.ObjetivoEstrategico", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.EstrategiaNacional", "EstrategiaNacionales")
                        .WithMany("ObjetivoEstrategicos")
                        .HasForeignKey("IdEstrategia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstrategiaNacionales");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.Producto", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.IndicadorEstrategico", "IndicadorEstrategicos")
                        .WithMany("Productos")
                        .HasForeignKey("IdIndicadorEstrategico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IndicadorEstrategicos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.ProductoObjetivo", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.ObjetivoEstrategico", "ObjetivoEstrategicos")
                        .WithMany("ProductoObjetivos")
                        .HasForeignKey("IdObjetivoEstra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ObjetivoEstrategicos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.Recurso", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Planificacion.Actividad", "Actividades")
                        .WithMany("Recursos")
                        .HasForeignKey("IdActividad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actividades");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Colaborador", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Maestro.Estructura", "Estructuras")
                        .WithMany("Colaboradores")
                        .HasForeignKey("IdEstructura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estructuras");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Firma", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Registro.Colaborador", "Colaboradores")
                        .WithMany("Firmas")
                        .HasForeignKey("IdColaborador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaboradores");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Formulario", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Registro.Colaborador", "Colaboradores")
                        .WithMany("Formularios")
                        .HasForeignKey("IdColaborador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaboradores");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.FormularioTercero", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Registro.Formulario", "Formularios")
                        .WithMany("FormularioTerceros")
                        .HasForeignKey("IdFormulario");

                    b.HasOne("WordVision.ec.Domain.Entities.Registro.Tercero", "Terceros")
                        .WithMany("FormularioTerceros")
                        .HasForeignKey("IdTecero")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("Formularios");

                    b.Navigation("Terceros");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Idioma", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Registro.Formulario", "Formularios")
                        .WithMany("Idiomas")
                        .HasForeignKey("IdFormulario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Formularios");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Pregunta", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Registro.Documento", "Documentos")
                        .WithMany("Preguntas")
                        .HasForeignKey("IdDocumento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Documentos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Respuesta", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Registro.Colaborador", "Colaboradores")
                        .WithMany("Respuestas")
                        .HasForeignKey("IdColaborador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaboradores");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Soporte.EstadosSolicitud", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Soporte.Solicitud", "Solicitudes")
                        .WithMany("EstadosSolicitudes")
                        .HasForeignKey("IdSolicitud")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Soporte.LogoSocio", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Soporte.Comunicacion", "Comunicaciones")
                        .WithMany("LogoSocios")
                        .HasForeignKey("IdComunicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comunicaciones");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Soporte.Ponente", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Soporte.Comunicacion", "Comunicaciones")
                        .WithMany("Ponentes")
                        .HasForeignKey("IdComunicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comunicaciones");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Soporte.Solicitud", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Registro.Colaborador", "Colaboradores")
                        .WithMany("Solicitudes")
                        .HasForeignKey("IdColaborador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WordVision.ec.Domain.Entities.Soporte.Comunicacion", "Comunicaciones")
                        .WithOne("Solicitudes")
                        .HasForeignKey("WordVision.ec.Domain.Entities.Soporte.Solicitud", "IdSolicitud");

                    b.HasOne("WordVision.ec.Domain.Entities.Soporte.Mensajeria", "Mensajerias")
                        .WithOne("Solicitudes")
                        .HasForeignKey("WordVision.ec.Domain.Entities.Soporte.Solicitud", "IdSolicitud");

                    b.Navigation("Colaboradores");

                    b.Navigation("Comunicaciones");

                    b.Navigation("Mensajerias");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Valoracion.AvanceObjetivo", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Valoracion.PlanificacionResultado", "PlanificacionResultados")
                        .WithMany("AvanceObjetivos")
                        .HasForeignKey("IdPlanificacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanificacionResultados");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Valoracion.ObjetivoAnioFiscal", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Valoracion.Objetivo", "Objetivos")
                        .WithMany("ObjetivoAnioFiscales")
                        .HasForeignKey("IdObjetivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Objetivos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Valoracion.PlanificacionComportamiento", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Valoracion.PlanificacionResultado", "PlanificacionResultados")
                        .WithMany("PlanificacionComportamientos")
                        .HasForeignKey("IdPlanificacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanificacionResultados");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Valoracion.PlanificacionHito", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Valoracion.PlanificacionResultado", "PlanificacionResultados")
                        .WithMany("PlanificacionHitos")
                        .HasForeignKey("IdPlanificacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanificacionResultados");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Valoracion.PlanificacionResultado", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Valoracion.ObjetivoAnioFiscal", "ObjetivoAnioFiscales")
                        .WithMany("PlanificacionResultados")
                        .HasForeignKey("IdObjetivoAnioFiscal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ObjetivoAnioFiscales");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Valoracion.Responsabilidad", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Valoracion.ObjetivoAnioFiscal", "ObjetivoAnioFiscales")
                        .WithMany("Responsabilidades")
                        .HasForeignKey("IdObjetivoAnioFiscal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ObjetivoAnioFiscales");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Valoracion.Resultado", b =>
                {
                    b.HasOne("WordVision.ec.Domain.Entities.Valoracion.ObjetivoAnioFiscal", "ObjetivoAnioFiscales")
                        .WithMany("Resultado")
                        .HasForeignKey("IdObjetivoAnioFiscal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ObjetivoAnioFiscales");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Catalogo", b =>
                {
                    b.Navigation("DetalleCatalogos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Empresa", b =>
                {
                    b.Navigation("Estructuras");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Estructura", b =>
                {
                    b.Navigation("Colaboradores");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Pais", b =>
                {
                    b.Navigation("Provincias");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Maestro.Provincia", b =>
                {
                    b.Navigation("Ciudades");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.Actividad", b =>
                {
                    b.Navigation("Recursos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.EstrategiaNacional", b =>
                {
                    b.Navigation("Gestiones");

                    b.Navigation("IndicadorCicloEstrategicos");

                    b.Navigation("ObjetivoEstrategicos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.FactorCriticoExito", b =>
                {
                    b.Navigation("IndicadorEstrategicos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorCicloEstrategico", b =>
                {
                    b.Navigation("IndicadorVinculadoCEs");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorEstrategico", b =>
                {
                    b.Navigation("IndicadorAFs");

                    b.Navigation("IndicadorVinculadoEs");

                    b.Navigation("MetaEstrategicas");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorPOA", b =>
                {
                    b.Navigation("Actividades");

                    b.Navigation("IndicadorVinculadoPOAs");

                    b.Navigation("MetaTacticas");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.IndicadorProductoObjetivo", b =>
                {
                    b.Navigation("IndicadorVinculadoPOs");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.ObjetivoEstrategico", b =>
                {
                    b.Navigation("FactorCriticoExitos");

                    b.Navigation("ProductoObjetivos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.Producto", b =>
                {
                    b.Navigation("IndicadorPOAs");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.ProductoObjetivo", b =>
                {
                    b.Navigation("IndicadorProductoObjetivos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Planificacion.Recurso", b =>
                {
                    b.Navigation("FechaCantidadRecursos");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Colaborador", b =>
                {
                    b.Navigation("Firmas");

                    b.Navigation("Formularios");

                    b.Navigation("Respuestas");

                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Documento", b =>
                {
                    b.Navigation("Preguntas");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Formulario", b =>
                {
                    b.Navigation("FormularioTerceros");

                    b.Navigation("Idiomas");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Registro.Tercero", b =>
                {
                    b.Navigation("FormularioTerceros");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Soporte.Comunicacion", b =>
                {
                    b.Navigation("LogoSocios");

                    b.Navigation("Ponentes");

                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Soporte.Mensajeria", b =>
                {
                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Soporte.Solicitud", b =>
                {
                    b.Navigation("EstadosSolicitudes");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Valoracion.Objetivo", b =>
                {
                    b.Navigation("ObjetivoAnioFiscales");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Valoracion.ObjetivoAnioFiscal", b =>
                {
                    b.Navigation("PlanificacionResultados");

                    b.Navigation("Responsabilidades");

                    b.Navigation("Resultado");
                });

            modelBuilder.Entity("WordVision.ec.Domain.Entities.Valoracion.PlanificacionResultado", b =>
                {
                    b.Navigation("AvanceObjetivos");

                    b.Navigation("PlanificacionComportamientos");

                    b.Navigation("PlanificacionHitos");
                });
#pragma warning restore 612, 618
        }
    }
}
